@using Laser.Orchard.Cookies;
@using Laser.Orchard.Cookies.Services
@{
    Style.Require("CookieCuttr");
    // I cannot defer loading the CookieCuttr script, because the inline script below is parsed
    // before the DOMLoadedEvent
    Script.Require("CookieCuttr");

    var settings = Model.CookieSettings;
    var part = Model.CookieLawPart;
    var siteName = Model.siteName;
    var iconUrl = Model.iconUrl;
    var cookieResetButton = settings.showCookieResetButton.ToString().ToLower();
    var cookieDiscreetReset = settings.cookieDiscreetReset.ToString().ToLower();

    // banner position
    var cookieBannerPosition = "overlay";
    switch ((CookieBannerPosition)settings.cookiePosition)
    {
        case CookieBannerPosition.Top:
            cookieBannerPosition = "top";
            break;
        case CookieBannerPosition.Bottom:
            cookieBannerPosition = "bottom";
            break;
        default: // Overlay
            cookieBannerPosition = "overlay";
            break;
    }

    var gdprScriptService = Model.GDPRScriptservice;
    var isPolicyPage = Model.isPolicyPage;

    using (Script.Foot())
    {
        if (settings.DisableCookieGDPRManagement == false)
        {
<script type="text/javascript">
$(document).ready(function() {
    var cookiesettings = { };
    if (@(part.cookieTitle.Length) > 0)
        cookiesettings.cookieTitle = '@part.cookieTitle';
    if (@(part.cookieMessage.Length) > 0)
        cookiesettings.cookieMessage = '@Html.Raw(part.cookieMessage.Replace(System.Environment.NewLine, "<br/>"))';
    if ('@part.cookiePolicyLink'.length > 0)
        cookiesettings.cookiePolicyLink = '@part.cookiePolicyLink';
    cookiesettings.cookieMessage = cookiesettings.cookieMessage + "<p id=\"ccPolicyMsgLink\"><a href=\"" + cookiesettings.cookiePolicyLink + "\">@part.cookiePolicyPageMessage</a></p>";
    // user options
    cookiesettings.cookieMessage = cookiesettings.cookieMessage + '<form><div style="display:inline-block;margin:auto;clear:both;width:100%"><div class="cc-cookie-checks">';
    cookiesettings.cookieMessage = cookiesettings.cookieMessage + '@Html.Raw(gdprScriptService.GetBannerChoices())';
    cookiesettings.cookieMessage = cookiesettings.cookieMessage + '</div></div></form>';
    // positioning
    cookiesettings.cookieDiscreetReset = @cookieDiscreetReset;
    cookiesettings.cookieBannerPosition = "@cookieBannerPosition";
    // buttons
    cookiesettings.cookieAcceptButton = true;
    if ('@part.cookieAcceptButtonText'.length > 0)
        cookiesettings.cookieAcceptButtonText = '@part.cookieAcceptButtonText';
    cookiesettings.cookieResetButton = @cookieResetButton;
    if ('@part.cookieResetButtonText'.length > 0)
        cookiesettings.cookieResetButtonText = '@part.cookieResetButtonText';
    cookiesettings.cookieExpectedValue = "@Html.Raw(gdprScriptService.GetCurrentCookiePrefix())";
    cookiesettings.cookieAccepted = (@gdprScriptService.IsCookieAccepted() == 1);
    if (@isPolicyPage) {
        cookiesettings.cookiePolicyPage = true;
    }
    // footer
    cookiesettings.cookieExpandMessage = "@T("Change your choice")";
    cookiesettings.cookiePoweredBy = "@siteName";
    cookiesettings.cookiePoweredByIcon = "@iconUrl";

    $.cookieCuttr(cookiesettings);
});
</script>
        }

        foreach (var cookie in gdprScriptService.GetAllowedCookies())
        {
            <text>@Html.Raw(cookie.GetScript(gdprScriptService.GetAcceptedCookieTypes())) </text>
        }
    }
}
