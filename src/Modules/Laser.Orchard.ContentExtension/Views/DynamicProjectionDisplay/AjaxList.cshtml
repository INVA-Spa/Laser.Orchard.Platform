<fieldset class="contentItems bulk-items">
    @if (Model.ContentItems != null) {
        @Display(Model.ContentItems)
    }
    else if (!string.IsNullOrEmpty(Model.ResultShape)) {
        @Html.Partial((string)(Model.ResultShape), (object)Model.Items)

    }
    else {
        @T("No content found. try again by changing the filters")
    }
</fieldset>
@if ((bool)Model.Part.Record.DisplayPager) {
    @Display(Model.Pager)
}
<script type="text/javascript">
    $(document).ready(function () {
        $("ul.pager > li > a").click(function(e){
            var url=$(this).attr('href');
            $.ajax({
                type: "GET",
                url: url,
                success: function (data) {
                    // Handle the fact that returnUrls have likely been generated using the
                    // ajax request, hence following them is wrong.
                    var retUrlRegex = /returnUrl=\S*AjaxList/g;
                    var result = data.replace(retUrlRegex, function (x) {
                        // the returnUrl should point to the List action, rather than the
                        // one for the ajax request.
                        return x.replace("AjaxList", "List");
                    });
                    $("#AjaxList").html(result);
                 }
            }).done(function () {
                transformPager();@*this function is defined within the file List.cshtml*@
                setTimeout(function () {
                    $("#overlay").fadeOut(300);
                }, 500);
            });;
            e.preventDefault();
        });
    });
</script>